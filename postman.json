{
	"variables": [
		{"key":"api_key","type":"string"},
		{"key":"ct","type":"number"}
	],
	"info": {
		"name": "Twikey API Test",
		"_postman_id": "c4f6d2cf-0b20-6c95-5a18-aa13d11ce46e",
		"description": "# Twikey API\nVersion: 1.0.0\n\n## General use\nTwikey has put in place a number of services enabling software partners, companies with own ERP or CRM systems, banks and other 3rd parties to exchange information . This page describes the different calls that are available to you. The calls allow integration in a number of ways.\n\nAll exchanges require a valid AuthorizationToken passed as a header named \"Authorization\". The AuthorizationToken can be retrieved via the login call and is valid for 24h. Exchanges can respond with both JSON & XML responses (based on the \"Accept\" header).\n\nSince there are numerous ways a company can allow its customers to pay, we provide a couple of high level use-cases to get you up and running in no time.\n\n## Sample use cases\n\n### The fitness scenario\n\nImagine you're going to the fitness where you exercise every once in a while. \nSince this doesn't come free you pay a monthly subscription fee. \nThis subscription fee is a recurring payment (we'll come back to that later). \nBut since all those exercises get you thirsty, you want to drink there too. \nBut of course, there are hotter and colder days. So how much you drink can vary.\n\nRegardless of what you consume, the fitness wants to get paid. \nBut you'd like to avoid getting out your wallet when you're all sweaty. \nSo your fitness made the great decision to use direct debits to allow you to pay. \nAt the end of the month they add the recurring amount to the one-off's (the drinks). \nThey send the payment request to the bank. Everyone's happy and relax.\n\nWhat did the fitness do to achieve this relaxed way of working:\n\nFirst of all, everything starts with a mandate. When a customer enrolls at the fitness he fills in the details for the internal bookkeeping of the fitness. The same information is sent to the prepare call. \nThis returns a URL (representing an unsigned mandate) that opens up after entering all details in the enrollment screen. \nSince the fitness has an internal subscription number they want to use to track payments and have \nmultiple subscriptions (eg. with and without personal trainer) they add both parameters in the prepare call. Making it visible in the mandate overview. \n\nOnce the customer filled in the account info and signed the mandate he's sent back to the fitness website with a \"thank you\" message. \nWhen a customer ask for a drink at the bar, the cash register calls the transaction endpoint with the details and amount. These are one-off transactions. Recurring transactions can either be handled the same way or if a subscription parameter was added in the prepare call, a recurring transaction is automatically added every month to get this subscription paid. At the end of each month, the file is created and sent to the bank manually via the collect call or automatically every night. \nYour bill is paid and the bank sends you the money. When the bank sends us back the account information, it is marked in your transaction overview that the transaction was paid. This information can be retrieved by the payment call. This call returns all new payment information since the last call. If a payment didn't succeed, you can configure what will happen next in the interface in the dunning section.\n\n### The parking app scenario\n\nBecause my customers don't like running in the rain looking for a parking meter while there's an app for that. \nHow can I use Twikey to get my parking fees paid? First of all, you need a mandate . \nThere are three possible options to have this mandate signed:\n\nUse an in-app browser with the link retrieved via the prepare call\nUse the sign call to invite the user to sign via an sms confirmation\nUse the sign call adding the manual signature as a png-image in the payload\nOnce the mandate is signed, in-app purchases can be sent from the backend of the app, collected the same way as mentioned in the fitness scenario.\n\n### The (off-line) webshop scenario\n\nI have a shop where people come in physically but I also have a webshop.\nI want people who signed a mandate (either online via the above flow or physically) to be able to purchase something \nfrom the online shop without requiring them to use their credit card and if possible give them the sameconvenience in the physical shop. \nThis way I can send them an invoice every month by only registering their purchases and collecting the payment via direct debit.\n\nIn the past, I had to send out all invoices and patiently waited for them to be paid. \nSince I'm not the most patient person on earth and even a bit chaotic at times, \nI'd rather collect the money directly from my customers. This way they can't forget to pay and I don't need to remind them to do so. \nHow convenient this is for both my customers and I.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"description": "",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Body has Authorization\"] = responseBody.has(\"Authorization\");",
									"tests[\"Authorization Header is present\"] = postman.getResponseHeader(\"Authorization\");",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Authorization\", data.Authorization);",
									"tests[\"Authorization\"] = postman.getEnvironmentVariable(\"Authorization\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "apiToken",
									"value": "{{api_key}}",
									"type": "text",
									"warning": ""
								},
								{
									"key": "otp",
									"value": "",
									"type": "text",
									"warning": ""
								}
							]
						},
						"description": "Login"
					},
					"response": []
				}
			]
		},
		{
			"name": "Mandate",
			"description": "",
			"item": [
				{
					"name": "Fetch Mandates",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has GrpHdr\"] = data.GrpHdr;",
									"tests[\"Body has Messages\"] = data.Messages;",
									"",
									"for(var i=0;i<data.Messages.length;i++){",
									"    if(data.Messages[i].CxlRsn){",
									"        postman.setEnvironmentVariable(\"Canceled\", data.Messages[i].OrgnlMndtId);",
									"    }",
									"    else {",
									"        postman.setEnvironmentVariable(\"Mandate\", data.Messages[i].Mndt.MndtId);",
									"    }",
									"}",
									"tests[\"Canceled\"] = postman.getEnvironmentVariable(\"Canceled\");",
									"tests[\"Mandate\"] = postman.getEnvironmentVariable(\"Mandate\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/mandate",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {}
					},
					"response": []
				},
				{
					"name": "Get Mandate Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Mndt\"] = data.Mndt;",
									"tests[\"Body has MndtId\"] = data.Mndt.MndtId;",
									"tests[\"Body has SplmtryData\"] = data.Mndt.SplmtryData;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/mandate/detail?mndtId=POSTM1",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"mandate",
								"detail"
							],
							"query": [
								{
									"key": "mndtId",
									"value": "POSTM1",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
                      "body": {},
                      "description": "Get Mandate Details"
					},
					"response": []
				},
				{
					"name": "Get Mandate Details signed",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Mndt\"] = data.Mndt;",
									"tests[\"Body has MndtId\"] = data.Mndt.MndtId;",
									"tests[\"Body has SplmtryData\"] = data.Mndt.SplmtryData;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/mandate/detail?mndtId=POSTM1&force=true",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"mandate",
								"detail"
							],
							"query": [
								{
									"key": "mndtId",
									"value": "POSTM1",
									"equals": true,
									"description": ""
								},
								{
									"key": "force",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Mandate Details canceled",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Mndt\"] = data.Mndt;",
									"tests[\"Body has MndtId\"] = data.Mndt.MndtId;",
									"tests[\"Body has SplmtryData\"] = data.Mndt.SplmtryData;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/mandate/detail?mndtId=POSTM2&force=true",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"mandate",
								"detail"
							],
							"query": [
								{
									"key": "mndtId",
									"value": "POSTM2",
									"equals": true,
									"description": ""
								},
								{
									"key": "force",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Mandate Details prepared",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Mndt\"] = data.Mndt;",
									"tests[\"Body has MndtId\"] = data.Mndt.MndtId;",
									"tests[\"Body has SplmtryData\"] = data.Mndt.SplmtryData;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/mandate/detail?mndtId=POSTM3&force=true",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"mandate",
								"detail"
							],
							"query": [
								{
									"key": "mndtId",
									"value": "POSTM3",
									"equals": true,
									"description": ""
								},
								{
									"key": "force",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "prepare mandate",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Body has mandateId\"] = responseBody.has(\"mndtId\");",
									"tests[\"Body has URL\"] = responseBody.has(\"url\");",
									"tests[\"Body has key\"] = responseBody.has(\"key\");",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"NewMandate\", data.mndtId);",
									"tests[\"NewMandate\"] = postman.getEnvironmentVariable(\"NewMandate\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/prepare",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ct",
									"value": "{{ct}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "sendInvite",
									"value": "false",
									"type": "text",
									"description": ""
								},
								{
									"key": "l",
									"value": "nl",
									"type": "text",
									"description": ""
								},
								{
									"key": "email",
									"value": "support@twikey.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "lastname",
									"value": "Support",
									"type": "text",
									"description": ""
								},
								{
									"key": "firstname",
									"value": "Twikey",
									"type": "text",
									"description": ""
								},
								{
									"key": "mobile",
									"value": "+32479123123",
									"type": "text",
									"description": ""
								},
								{
									"key": "address",
									"value": "Derbystraat 43",
									"type": "text",
									"description": ""
								},
								{
									"key": "zip",
									"value": "9051",
									"type": "text",
									"description": ""
								},
								{
									"key": "city",
									"value": "Sint Denijs Westrem",
									"type": "text",
									"description": ""
								},
								{
									"key": "country",
									"value": "BE",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "prepare mandate copy to cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Body has mandateId\"] = responseBody.has(\"mndtId\");",
									"tests[\"Body has URL\"] = responseBody.has(\"url\");",
									"tests[\"Body has key\"] = responseBody.has(\"key\");",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"NewCancelMandate\", data.mndtId);",
									"tests[\"NewCancelMandate\"] = postman.getEnvironmentVariable(\"NewCancelMandate\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/prepare",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ct",
									"value": "{{ct}}",
									"type": "text",
									"description": ""
								},
								{
									"key": "sendInvite",
									"value": "false",
									"type": "text",
									"description": ""
								},
								{
									"key": "l",
									"value": "nl",
									"type": "text",
									"description": ""
								},
								{
									"key": "email",
									"value": "cancel@twikey.com",
									"type": "text",
									"description": ""
								},
								{
									"key": "lastname",
									"value": "Support",
									"type": "text",
									"description": ""
								},
								{
									"key": "firstname",
									"value": "Twikey",
									"type": "text",
									"description": ""
								},
								{
									"key": "mobile",
									"value": "+32479123123",
									"type": "text",
									"description": ""
								},
								{
									"key": "address",
									"value": "Derbystraat 43",
									"type": "text",
									"description": ""
								},
								{
									"key": "zip",
									"value": "9051",
									"type": "text",
									"description": ""
								},
								{
									"key": "city",
									"value": "Sint Denijs Westrem",
									"type": "text",
									"description": ""
								},
								{
									"key": "country",
									"value": "BE",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Cancel prepared Mandate",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/mandate?mndtId={{NewCancelMandate}}&rsn=No+reason",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"mandate"
							],
							"query": [
								{
									"key": "mndtId",
									"value": "{{NewCancelMandate}}",
									"equals": true,
									"description": ""
								},
								{
									"key": "rsn",
									"value": "No+reason",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "POSTM0",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "rsn",
									"value": "No reason",
									"type": "text",
									"description": "",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "import mandates",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/mandate",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"GrpHdr\": {\r\n        \"CreDtTm\": \"2017-08-31T07:35:25Z\"\r\n    },\r\n    \"Messages\": [\r\n        {\r\n            \"Mndt\": {\r\n                \"MndtId\": \"POSTM0\",\r\n                \"LclInstrm\": \"CORE\",\r\n                \"Ocrncs\": {\r\n                    \"SeqTp\": \"RCUR\",\r\n                    \"Frqcy\": \"ADHO\",\r\n                    \"Drtn\": {\r\n                        \"FrDt\": \"2017-08-30\"\r\n                    }\r\n                },\r\n                \"CdtrSchmeId\": \"EE07ZZZPOSTMANTEST\",\r\n                \"Cdtr\": {\r\n                    \"Nm\": \"Postman \",\r\n                    \"PstlAdr\": {\r\n                        \"AdrLine\": \"Derbystraat 43\",\r\n                        \"PstCd\": \"9051\",\r\n                        \"TwnNm\": \"Sint Denijs Westrem\",\r\n                        \"Ctry\": \"EE\"\r\n                    },\r\n                    \"Id\": \"EEPOSTMANTEST\",\r\n                    \"CtryOfRes\": \"EE\",\r\n                    \"CtctDtls\": {\r\n                        \"EmailAdr\": \"jonathan@twikey.com\"\r\n                    }\r\n                },\r\n                \"Dbtr\": {\r\n                    \"Nm\": \"Dominique Adriansens\",\r\n                    \"PstlAdr\": {\r\n                        \"AdrLine\": \"Riet\",\r\n                        \"PstCd\": \"8020\",\r\n                        \"TwnNm\": \"Oostkamp\",\r\n                        \"Ctry\": \"BE\"\r\n                    },\r\n                    \"CtryOfRes\": \"BE\",\r\n                    \"CtctDtls\": {\r\n                        \"EmailAdr\": \"contact@twikey.com\",\r\n                        \"MobNb\": null\r\n                    }\r\n                },\r\n                \"DbtrAcct\": \"BE68068897250734\",\r\n                \"DbtrAgt\": {\r\n                    \"FinInstnId\": {\r\n                        \"BICFI\": \"GKCCBEBB\",\r\n                        \"Nm\": \"BELFIUS BANK\"\r\n                    }\r\n                },\r\n                \"RfrdDoc\": \"Algemene voorwaarden\",\r\n                \"SplmtryData\": [\r\n                    {\r\n                        \"Key\": \"MandateName\",\r\n                        \"Value\": \"SEPA Direct Debit\"\r\n                    },\r\n                    {\r\n                        \"Key\": \"TemplateId\",\r\n                        \"Value\": 1323\r\n                    },\r\n                    {\r\n                        \"Key\": \"FirstName\",\r\n                        \"Value\": \"Dominique\"\r\n                    },\r\n                    {\r\n                        \"Key\": \"LastName\",\r\n                        \"Value\": \"Adriansens\"\r\n                    },\r\n                    {\r\n                        \"Key\": \"TRACKER\",\r\n                        \"Value\": \"iJUo\"\r\n                    },\r\n                    {\r\n                        \"Key\": \"SignerMethod#0\",\r\n                        \"Value\": \"print\"\r\n                    },\r\n                    {\r\n                        \"Key\": \"Signer#0\",\r\n                        \"Value\": \"jonathan@twikey.com\"\r\n                    },\r\n                    {\r\n                        \"Key\": \"SignerPlace#0\",\r\n                        \"Value\": \"(Imported)\"\r\n                    },\r\n                    {\r\n                        \"Key\": \"SignerDate#0\",\r\n                        \"Value\": \"2017-08-30T16:37:05Z\"\r\n                    }\r\n                ]\r\n            },\r\n            \"EvtTime\": \"2017-08-30T16:37:05Z\"\r\n        }\r\n    ]\r\n}"
						},
						"description": "importing mandates"
					},
					"response": []
				},
				{
					"name": "Cancel Signed Mandate",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Response is empty\"] = responseBody.length === 0;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/mandate?mndtId=POSTM0&rsn=No+reason",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"mandate"
							],
							"query": [
								{
									"key": "mndtId",
									"value": "POSTM0",
									"equals": true,
									"description": ""
								},
								{
									"key": "rsn",
									"value": "No+reason",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "POSTM0",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "rsn",
									"value": "No reason",
									"type": "text",
									"description": "",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update Mandate Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Response is empty\"] = responseBody.length === 0;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/mandate/update",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "{{Mandate}}",
									"description": "",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "+32479123123",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": "Get Mandate Details"
					},
					"response": []
				},
				{
					"name": "Cancel canceled Mandate",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Response invalid state code\"] = jsonData.code === \"err_mandate_invalid_state\";",
									"tests[\"Response invalid state message\"] = jsonData.message === \"One of the mandates had an invalid state\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/mandate?mndtId=POSTM2&rsn=No+reason",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"mandate"
							],
							"query": [
								{
									"key": "mndtId",
									"value": "POSTM2",
									"equals": true,
									"description": ""
								},
								{
									"key": "rsn",
									"value": "No+reason",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "POSTM0",
									"type": "text",
									"description": "",
									"disabled": true
								},
								{
									"key": "rsn",
									"value": "No reason",
									"type": "text",
									"description": "",
									"disabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Sign SMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has ok\"] = jsonData.Msg === \"ok\";",
									"tests[\"Has sms\"] = responseBody.has(\"MndtId\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/sign",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "method",
									"value": "sms",
									"description": "",
									"type": "text"
								},
								{
									"key": "place",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								},
								{
									"key": "iban",
									"value": "BE68068897250734",
									"description": "",
									"type": "text"
								},
								{
									"key": "bic",
									"value": "GKCCBEBB",
									"description": "",
									"type": "text"
								},
								{
									"key": "email",
									"value": "sms@twikey.com",
									"description": "",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Twikey",
									"description": "",
									"type": "text"
								},
								{
									"key": "firstname",
									"value": "SMS",
									"description": "",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "+32479123123",
									"description": "",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Derbystraat 43",
									"description": "",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "zip",
									"value": "9051",
									"description": "",
									"type": "text"
								},
								{
									"key": "country",
									"value": "BE",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Sign Sofort",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has ok\"] = jsonData.Msg === \"ok\";",
									"tests[\"Has MndtId\"] = responseBody.has(\"MndtId\");",
									"tests[\"Has Url\"] = responseBody.has(\"url\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/sign",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "method",
									"value": "sofort",
									"description": "",
									"type": "text"
								},
								{
									"key": "place",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								},
								{
									"key": "iban",
									"value": "BE68068897250734",
									"description": "",
									"type": "text"
								},
								{
									"key": "bic",
									"value": "GKCCBEBB",
									"description": "",
									"type": "text"
								},
								{
									"key": "email",
									"value": "sofort@twikey.com",
									"description": "",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Twikey",
									"description": "",
									"type": "text"
								},
								{
									"key": "firstname",
									"value": "SMS",
									"description": "",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "+32479123123",
									"description": "",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Derbystraat 43",
									"description": "",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "zip",
									"value": "9051",
									"description": "",
									"type": "text"
								},
								{
									"key": "country",
									"value": "BE",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Sign digising",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has ok\"] = jsonData.Msg === \"ok\";",
									"tests[\"Has MndtId\"] = responseBody.has(\"MndtId\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/sign",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "method",
									"value": "digisign",
									"description": "",
									"type": "text"
								},
								{
									"key": "place",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								},
								{
									"key": "iban",
									"value": "BE68068897250734",
									"description": "",
									"type": "text"
								},
								{
									"key": "bic",
									"value": "GKCCBEBB",
									"description": "",
									"type": "text"
								},
								{
									"key": "email",
									"value": "sofort@twikey.com",
									"description": "",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Twikey",
									"description": "",
									"type": "text"
								},
								{
									"key": "firstname",
									"value": "SMS",
									"description": "",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "+32479123123",
									"description": "",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Derbystraat 43",
									"description": "",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "zip",
									"value": "9051",
									"description": "",
									"type": "text"
								},
								{
									"key": "country",
									"value": "BE",
									"description": "",
									"type": "text"
								},
								{
									"key": "digsig",
									"value": "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",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Sign selfie",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has ok\"] = jsonData.Msg === \"ok\";",
									"tests[\"Has MndtId\"] = responseBody.has(\"MndtId\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/sign",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "method",
									"value": "selfie",
									"description": "",
									"type": "text"
								},
								{
									"key": "place",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								},
								{
									"key": "iban",
									"value": "BE68068897250734",
									"description": "",
									"type": "text"
								},
								{
									"key": "bic",
									"value": "GKCCBEBB",
									"description": "",
									"type": "text"
								},
								{
									"key": "email",
									"value": "selfie@twikey.com",
									"description": "",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Twikey",
									"description": "",
									"type": "text"
								},
								{
									"key": "firstname",
									"value": "SMS",
									"description": "",
									"type": "text"
								},
								{
									"key": "mobile",
									"value": "+32479123123",
									"description": "",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Derbystraat 43",
									"description": "",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Gent",
									"description": "",
									"type": "text"
								},
								{
									"key": "zip",
									"value": "9051",
									"description": "",
									"type": "text"
								},
								{
									"key": "country",
									"value": "BE",
									"description": "",
									"type": "text"
								},
								{
									"key": "selfie",
									"value": "",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "add transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Entries\"] = data.Entries;",
									"tests[\"Transaction has id\"] = data.Entries[0].id;",
									"tests[\"Transaction has amount\"] = data.Entries[0].amount;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/transaction",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "POSTM1",
									"type": "text",
									"description": ""
								},
								{
									"key": "message",
									"value": "testtransaction",
									"type": "text",
									"description": ""
								},
								{
									"key": "amount",
									"value": "50.00",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"description": "",
			"item": [
				{
					"name": "add transaction for submit",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Entries\"] = data.Entries;",
									"tests[\"Transaction has id\"] = data.Entries[0].id;",
									"tests[\"Transaction has amount\"] = data.Entries[0].amount;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/transaction",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "POSTM1",
									"type": "text",
									"description": ""
								},
								{
									"key": "message",
									"value": "testtransaction",
									"type": "text",
									"description": ""
								},
								{
									"key": "amount",
									"value": "50.00",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "add transaction to remove",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Entries\"] = data.Entries;",
									"tests[\"Transaction has id\"] = data.Entries[0].id;",
									"postman.setEnvironmentVariable(\"id\", data.Entries[0].id);",
									"tests[\"Environment has id\"] = postman.getEnvironmentVariable(\"id\");",
									"tests[\"Transaction has amount\"] = data.Entries[0].amount;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/transaction",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "POSTM1",
									"type": "text",
									"description": ""
								},
								{
									"key": "message",
									"value": "testtransaction",
									"type": "text",
									"description": ""
								},
								{
									"key": "amount",
									"value": "50.00",
									"type": "text",
									"description": ""
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "transaction details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Entries\"] = data.Entries;",
									"tests[\"Transaction has id\"] = data.Entries[0].id;",
									"tests[\"Transaction has amount\"] = data.Entries[0].amount;",
									"tests[\"Transaction has state\"] = data.Entries[0].state;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/transaction/detail?id={{id}}",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"transaction",
								"detail"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "remove transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://api.twikey.com/creditor/transaction?id={{id}}",
							"host": [
								"https://api.twikey.com"
							],
							"path": [
								"creditor",
								"transaction"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "fetch transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Entries\"] = data.Entries;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/transaction",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Collections",
			"description": "",
			"item": [
				{
					"name": "prenotify",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/prenotification",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "mndtId",
									"value": "POSTM1",
									"description": "",
									"type": "text"
								},
								{
									"key": "message",
									"value": "prenotify message",
									"description": "",
									"type": "text"
								},
								{
									"key": "collectionDate",
									"value": "2017-09-15",
									"description": "",
									"type": "text"
								},
								{
									"key": "invoiceUrl",
									"value": "invoicetest.twikey.com/invoice123",
									"description": "",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "50.00",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "download collection file",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/collect/sdd",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "submit collection file",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has frstMsgId\"] = responseBody.has(\"frstMsgId\");",
									"tests[\"Has rcurMsgId\"] = responseBody.has(\"rcurMsgId\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"timestamp\", Date.now());"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/collect",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								},
								{
									"key": "colltndt",
									"value": "{{timestamp}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Execute collection",
					"request": {
						"url": "https://api.twikey.com/creditor/collect",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								}
							]
						},
                        "description": "Login"
					},
					"response": []
				},
				{
					"name": "Fetch collection payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Has Sdds\"] = responseBody.has(\"Sdds\");"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/payment",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Credit Transfer",
			"description": "",
			"item": [
				{
					"name": "Create new Credit Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has id\"] = jsonData.Entries[0].id;",
									"tests[\"Has iban\"] = jsonData.Entries[0].iban;",
									"tests[\"Has message\"] = jsonData.Entries[0].msg === \"test credit transfer\";"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/transfer",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "iban",
									"value": "BE68068897250734",
									"description": "",
									"type": "text"
								},
								{
									"key": "message",
									"value": "test credit transfer",
									"description": "",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "50.00",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Compete credit transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests [\"Has CreditTransfers\"]= responseBody.has(\"CreditTransfers\");",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Has id\"] = jsonData.CreditTransfers[0].id;",
									"tests[\"Has pmtinfid\"] = jsonData.CreditTransfers[0].pmtinfid;",
									"tests[\"Has entries\"] = jsonData.CreditTransfers[0].entries;",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/transfer/complete",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ct",
									"value": "{{ct}}",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Identification",
			"description": "",
			"item": [
				{
					"name": "IDIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests[\"Body has Url\"] = data.url;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor/ident",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ct",
									"value": "{{ct}}",
									"type": "text",
									"warning": ""
								},
								{
									"key": "bic",
									"value": "RABONL2U",
									"type": "text",
									"warning": ""
								}
							]
						},
						"description": "Login"
					},
					"response": []
				}
			]
		},
		{
			"name": "Logout",
			"description": "",
			"item": [
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "https://api.twikey.com/creditor",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{Authorization}}",
								"description": ""
							}
						],
						"description": "Logout"
					},
					"response": []
				}
			]
		}
	]
}